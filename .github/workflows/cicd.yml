name: CI/CD Pipeline

on:
  push:
    branches: [main, test/cicd]

env:
  FRONTEND_PATH: './frontend'
  BACKEND_PATH: './backend'
  NODE_VERSION: '22'
  JAVA_VERSION: '17'

jobs:
  frontend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Node.js 설정
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: ${{ env.FRONTEND_PATH }}/package-lock.json

      - name: 캐시 설정
        uses: actions/cache@v3
        with:
          path: |
            ${{ env.FRONTEND_PATH }}/node_modules
            ${{ env.FRONTEND_PATH }}/.next/cache
          key: ${{ runner.os }}-frontend-${{ hashFiles('frontend/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-frontend-

      - name: 의존성 설치 및 빌드
        working-directory: ${{ env.FRONTEND_PATH }}
        env:
          CI: false
        run: |
          npm ci
          npm run build

      - name: Node 빌드 저장
        uses: actions/upload-artifact@v3
        with:
          name: frontend-build
          path: ${{ env.FRONTEND_PATH }}/build
          retention-days: 1

  backend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: JDK 설정
        uses: actions/setup-java@v3
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: 'temurin'
          cache: gradle

      - name: Gradle 캐시
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('backend/**/*.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Spring boot Build
        working-directory: ${{ env.BACKEND_PATH }}
        run: |
          chmod +x ./gradlew
          ./gradlew build -x test

      - name: 빌드 저장
        uses: actions/upload-artifact@v3
        with:
          name: backend-build
          path: ${{ env.BACKEND_PATH }}/build/libs
          retention-days: 1

  deploy:
    needs: [ frontend, backend ]
    runs-on: ubuntu-latest
    steps:
      - name: Download builds
        uses: actions/download-artifact@v3
        with:
          path: builds

      - name: 빌드 파일 전송
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          source: "builds/*"
          target: "/home/ubuntu/deploy"
          strip_components: 1

      - name: SSH Commands
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          port: 22
          script_stop: true
          script: |
            for pid in $(pgrep java); do
              if ps -p $pid -o args= | grep -q 'java -jar'; then
                kill -9 $pid
              fi
            done
            echo "nohup java -jar ~/*.jar > ~/app.log 2>&1 &" | at now