name: CI/CD Pipeline

on:
  push:
    branches: main

env:
  PATH: './backend'
  JAVA_VERSION: '17'

jobs:
  backend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: JDK 설정
        uses: actions/setup-java@v3
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: 'temurin'
          cache: gradle

      - name: Gradle 캐시
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('backend/**/*.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Spring boot Build
        working-directory: ${{ env.BACKEND_PATH }}
        run: |
          chmod +x ./gradlew
          ./gradlew build -x test

      - name: 빌드 저장
        uses: actions/upload-artifact@v4
        with:
          name: backend-build
          path: ${{ env.BACKEND_PATH }}/build/libs
          retention-days: 1

  deploy:
    needs: backend
    runs-on: ubuntu-latest
    steps:
      - name: Download builds
        uses: actions/download-artifact@v4
        with:
          path: builds

      - name: 빌드 파일 전송
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          source: "builds/*"
          target: "/home/ubuntu/deploy"
          strip_components: 1

      - name: 이전 JAR 프로세스 종료
        uses: appleboy/ssh-action@v0.1.0
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          port: 22
          script: |
            cd /home/ubuntu/build/libs/
            JAR_NAME="delivery-0.0.1-SNAPSHOT.jar"
            PID=$(ps aux | grep "$JAR_NAME" | grep -v grep | awk '{print $2}')
            
            if [ -n "$PID" ]; then
              echo "이전 프로세스($PID)가 실행 중입니다. 종료를 시도합니다."
              kill $PID
              sleep 10
              if ps -p $PID > /dev/null; then
                echo "프로세스($PID)가 아직 종료되지 않았습니다. 강제 종료를 시도합니다."
                kill -9 $PID
                sleep 5
              fi
              echo "프로세스 종료 완료"
            else
              echo "실행 중인 $JAR_NAME 프로세스가 없습니다."
            fi

      - name: 새로운 JAR 파일 실행
        uses: appleboy/ssh-action@v0.1.0
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          port: 22
          script: |
            cd /home/ubuntu/deploy/backend-build
            echo "현재 작업 디렉토리 확인: $(pwd)"
            JAR_PATH=delivery-0.0.1-SNAPSHOT.jar
            LOG_FILE=/home/ubuntu/app.log  
            
            if [ -f "$JAR_PATH" ]; then
              echo "JAR 파일을 찾았습니다. 애플리케이션을 시작합니다."
            
              # nohup을 통해 백그라운드에서 실행하고 로그를 절대 경로에 저장
              nohup java -jar "$JAR_PATH" > "$LOG_FILE" 2>&1 &
            
              echo "애플리케이션이 백그라운드에서 실행 중입니다."
            else
              echo "JAR 파일을 찾을 수 없습니다!"
              exit 1
            fi